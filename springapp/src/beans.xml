<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd ">

	<!-- Definition for student bean -->
	<bean id="student" class="com.rediff.spring.Student">
		<property name="name" value="Zara" />
		<property name="age" value="11" />
	</bean>

	<!-- Definition for logging aspect -->
	<bean id="logging" class="com.rediff.spring.Logging" />


	<aop:config>
	    
		<aop:aspect id="log" ref="logging">
			<aop:pointcut id="selectAll" expression="execution(* com.rediff.spring.*.*(..)) and args(name, ..)" />
			<aop:pointcut id="selectAll1" expression="execution(* com.rediff.spring.*.*(..)) " />
			
			<aop:before pointcut-ref="selectAll" method="beforeAdvice" />
			<aop:after pointcut-ref="selectAll" method="afterAdvice" />
			<aop:around pointcut-ref="selectAll" method="aroundAdvice" />
			<aop:after-returning pointcut-ref="selectAll1" method="afterReturningAdvice" />
			 <aop:after-throwing method="afterThrowingAdvice" pointcut-ref="selectAll1" throwing="error"  />
		</aop:aspect>
	</aop:config>

	<!-- Hibernate -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/javatest"></property>
		<property name="username" value="rediff"></property>
		<property name="password" value="rediff"></property>
	</bean>

	<bean id="mysessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean>

	<!-- Using Tempalte -->
	<bean id="d" class="com.rediff.shibernate.EmployeeDao">
		<property name="template" ref="template"></property>
	</bean>
	<bean id="template" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="mysessionFactory"></property>
	</bean>
	
	<!-- Using default hibernate SessionFactory -->
	<bean id="d1" class="com.rediff.shibernate.EmployeeDaoSessionFactory">
		<property name="sessionFactory" ref="mysessionFactory"></property>
	</bean>
		
	
	<!-- Using SessionFactory with declarative txn -->
	<bean id="d2" class="com.rediff.shibernate.EmployeeDaoSessionFactoryTxn">
		<property name="sessionFactory" ref="mysessionFactory"></property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
          <property name="sessionFactory" ref="mysessionFactory" />
    </bean>
    <tx:advice id='txAdvice' transaction-manager="transactionManager">
        <tx:attributes>
                <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    <aop:config proxy-target-class="true">
            <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.rediff.shibernate.EmployeeDaoSessionFactoryTxn.*(..))"/>
            <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.rediff.shibernate.EmployeeDao.*(..))"/>
    </aop:config>
</beans>